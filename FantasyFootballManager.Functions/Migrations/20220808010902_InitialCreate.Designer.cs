// <auto-generated />
using System;
using FantasyFootballManager.Functions.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FantasyFootballManager_Functions.Migrations
{
    [DbContext(typeof(FantasyContext))]
    [Migration("20220808010902_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FantasyFootballManager.Functions.Models.FootballPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuctionValue")
                        .HasColumnType("int");

                    b.Property<double>("AverageDraftPositionFCalculator")
                        .HasColumnType("float");

                    b.Property<double>("AverageDraftPositionLineups")
                        .HasColumnType("float");

                    b.Property<double>("AverageDraftPositionSportsData")
                        .HasColumnType("float");

                    b.Property<int>("Bye")
                        .HasColumnType("int");

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<int>("FFCRank")
                        .HasColumnType("int");

                    b.Property<int>("FantasyProsId")
                        .HasColumnType("int");

                    b.Property<int>("FantasyProsRank")
                        .HasColumnType("int");

                    b.Property<int>("FootballCalculatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnMyTeam")
                        .HasColumnType("bit");

                    b.Property<double>("LastSeasonFantasyPoints")
                        .HasColumnType("float");

                    b.Property<DateTime>("LastUpdatedFFootballCalculator")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedFantasyPros")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedLineups")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedSportsDataIO")
                        .HasColumnType("datetime2");

                    b.Property<double>("LineupsAuctionValue")
                        .HasColumnType("float");

                    b.Property<int>("LineupsRank")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlayerHeadshotURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProjectedFantasyPoints")
                        .HasColumnType("float");

                    b.Property<double>("ProjectedFantasyPointsLineups")
                        .HasColumnType("float");

                    b.Property<int>("SportsDataIOId")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FootballPlayers");
                });

            modelBuilder.Entity("FantasyFootballManager.Functions.Models.ImportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImportStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
